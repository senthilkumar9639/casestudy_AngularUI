{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/material.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/login.service.ts","./src/app/models/models-model.ts","./src/app/models/modelsId-model.ts","./src/app/models/orderaccessorydetail-model.ts","./src/app/models/orderaccessorydetailid-model.ts","./src/app/models/orderdetail-model.ts","./src/app/models/orderdetailid-model.ts","./src/app/models/orderheader-model.ts","./src/app/models/orderheaderid-model.ts","./src/app/models/series-model.ts","./src/app/models/seriesid-model.ts","./src/app/order-create/order-create.component.ts","./src/app/order-create/order-create.component.html","./src/app/order-create/order-create.service.ts","./src/app/test/test.component.ts","./src/app/test/test.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from './login/login.component';\nimport { OrderCreateComponent } from './order-create/order-create.component';\nimport { TestComponent } from './test/test.component';\n\n\nconst routes: Routes = [{path:\"login\",component:LoginComponent},\n{path:\"CreateOrder\",component:OrderCreateComponent},\n{path:\"test\",component:TestComponent}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'order-mgmt-app2';\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row>\n        <span>ABC CORPORATION</span>\n        <span class=\"example-fill-remaining-space\"></span>\n        <span class=\"align-center\"></span>\n        <span class=\"example-spacer\"></span>\n        <button mat-button>About</button>\n        <button mat-button>Contact</button>\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n    <mat-icon>more_vert</mat-icon>\n  </button>\n        <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item>\n      <mat-icon>dialpad</mat-icon>\n      <span>Redial</span>\n    </button>\n            <button mat-menu-item disabled>\n      <mat-icon>voicemail</mat-icon>\n      <span>Check voicemail</span>\n    </button>\n            <button mat-menu-item>\n      <mat-icon>notifications_off</mat-icon>\n      <span>Disable alerts</span>\n    </button>\n        </mat-menu>\n    </mat-toolbar-row>\n</mat-toolbar>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule }    from '@angular/common/http';\nimport { CustomMaterialModule } from './core/material.module';\nimport {FormsModule} from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginComponent } from './login/login.component';\nimport { OrderCreateComponent } from './order-create/order-create.component';\nimport { TestComponent } from './test/test.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    OrderCreateComponent,\n    TestComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    CustomMaterialModule,\n    FormsModule,\n    NgSelectModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\n\n@NgModule({\n    imports: [\n    CommonModule, \n    MatToolbarModule,\n    MatButtonModule, \n    MatCardModule,\n    MatInputModule,\n    MatDialogModule,\n    MatTableModule,\n    MatMenuModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatSelectModule\n    ],\n    exports: [\n    CommonModule,\n     MatToolbarModule, \n     MatButtonModule, \n     MatCardModule, \n     MatInputModule, \n     MatDialogModule, \n     MatTableModule, \n     MatMenuModule,\n     MatIconModule,\n     MatProgressSpinnerModule,\n     MatSelectModule\n     ],\n  })\n  export class CustomMaterialModule { }","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from './login.service'\nimport { Router } from '@angular/router';\nimport {MatDialog} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username: string;\n  password: string;\n  screenName: String;\n  constructor(private loginService: LoginService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  login() : void {\n   \n    this.loginService.checkLogin(this.username, this.password).subscribe(x => {\n      this.screenName = x.screenNo;\n      if(this.screenName!==''){\n        this.router.navigate([\"/\" + this.screenName]);\n      }\n      else{\n        alert(\"Invalid credentials\");\n      }\n    });\n  }\n}\n","<mat-card class=\"example-card\">\n    <mat-card-header>\n        <mat-card-title>Login</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <form class=\"example-form\">\n            <table class=\"example-full-width\" cellspacing=\"0\">\n                <tr>\n                    <td>\n                        <mat-form-field class=\"example-full-width\">\n                            <input matInput placeholder=\"Username\" [(ngModel)]=\"username\" name=\"username\" required>\n                        </mat-form-field>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <mat-form-field class=\"example-full-width\">\n                            <input matInput placeholder=\"Password\" [(ngModel)]=\"password\" type=\"password\" name=\"password\" required>\n                        </mat-form-field>\n                    </td>\n                </tr>\n            </table>\n        </form>\n    </mat-card-content>\n    <mat-card-actions>\n        <button mat-raised-button (click)=\"login()\" color=\"primary\">Login</button>\n    </mat-card-actions>\n</mat-card>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs'\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  private loginurl = \"http://localhost:8082/login\";\n\n  constructor(private http: HttpClient) {\n\n  }\n  checkLogin(name: String, pwd: String): Observable<any> {\n    var data = { userName: name, userPwd: pwd };\n    return this.http.post<any>(this.loginurl, data);\n  }\n}\n","import {ModelsId} from './modelsId-model';\nexport class Models{\n    id : ModelsId;\n    modelName : String;\n    modelPrice : number;\n}","export class ModelsId{\n    cmpCode : String;\n    seriesCode : String;\n    modelCode : String;\n}","import {OrderaccessorydetailId} from './orderaccessorydetailid-model'\nexport class Orderaccessorydetail{\n    id : OrderaccessorydetailId;\n}","export class OrderaccessorydetailId{\n    cmpCode : String;\n    dealerCode : String;\n    orderNo : String;\n    accessoryCode : String;\n}","import {OrderdetailId} from './orderdetailid-model';\nexport class Orderdetail{\n    id : OrderdetailId;\n    totalOrdQty : number;\n    totalAccQty : number;\n    orderBaseAmount : number;\n    orderAccesoryAmount : number;\n    orderTotalAmount : number;\n\n\n}","export class OrderdetailId{\n    cmpCode : String;\n    dealerCode : String;\n    orderNo : String;\n    colorCode : String;\n}","import {OrderHeaderId} from './orderheaderid-model';\nimport {Orderaccessorydetail} from './orderaccessorydetail-model';\nimport {Orderdetail} from './orderdetail-model';\nexport class OrderHeader{\n\n    id : OrderHeaderId;\n    orderDt : Date;\n    orderValue :number;\n    accDetails :Orderaccessorydetail[];\n    ordDetails : Orderdetail[];\n\n}","export class OrderHeaderId{\n    cmpCode : String;\n    dealerCode : String;\n    seriesCode : String;\n    modelCode : String;\n    orderNo : String;\n}","import {SeriesId} from './seriesid-model';\nexport class Series{\n    id : SeriesId;\n    seriesName : String;\n}","export class SeriesId{\n    cmpCode : String;\n    seriesCode : String;\n}","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Series } from '../models/series-model';\nimport { Models } from '../models/models-model';\nimport { OrderCreateService } from './order-create.service';\nimport { Accessory } from '../models/accessory-model';\nimport { Colors } from '../models/colors-model';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { FormControl } from '@angular/forms';\nimport { SeriesId } from '../models/seriesid-model';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { ModelsId } from '../models/modelsId-model';\nimport { OrderHeader } from '../models/orderheader-model';\nimport { OrderHeaderId } from '../models/orderheaderid-model';\nimport { Orderdetail } from '../models/orderdetail-model';\nimport { OrderdetailId } from '../models/orderdetailid-model';\nimport { OrderaccessorydetailId } from '../models/orderaccessorydetailid-model';\nimport { Orderaccessorydetail } from '../models/orderaccessorydetail-model';\n\n\n\n\n@Component({\n  selector: 'app-order-create',\n  templateUrl: './order-create.component.html',\n  styleUrls: ['./order-create.component.css']\n})\nexport class OrderCreateComponent implements OnInit {\n  dataSourceForAccessory = new MatTableDataSource();\n  dataSourceForColor = new MatTableDataSource();\n  // accSelection = new SelectionModel<Accessory>(true, []);\n  accselection = new SelectionModel<any>(true, []);\n\n\n  columnsToDisplayForAccessory = [];\n  columnsToDisplayForColor = [];\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  seriesList = [];\n  modelList = [];\n  accList = [];\n  colorsList = [];\n  selectedAccessories = [];\n  selectedColors = [];\n\n  selectedSeries: any;\n  selectedModel: any;\n  TotalPrice: any;\n\n  constructor(private orderCreateService: OrderCreateService) { }\n\n  ngOnInit(): void {\n    this.columnsToDisplayForAccessory = ['select', 'Position', 'AccessoryName', 'Price'];\n    this.columnsToDisplayForColor = ['select', 'Position', 'ColorsName', 'ColorPrice', 'Qty'];\n    this.orderCreateService.getSeries().subscribe(result => {\n      this.selectedSeries = result[0].id.seriesCode;\n      result.forEach(data => {\n        this.seriesList.push({\n          'code': data.id.seriesCode,\n          'data': data,\n          'name': data.seriesName\n        })\n      });\n      this.orderCreateService.getModelBasedOnSeries(this.seriesList[0].data).subscribe(result2 => {\n        this.selectedModel = result2[0].id.seriesCode + '~' + result2[0].id.modelCode;\n        result2.forEach(data => {\n          this.modelList.push({\n            'code': data.id.seriesCode + '~' + data.id.modelCode,\n            'modelName': data.modelName,\n            'data': data\n          })\n        });\n        this.orderCreateService.getAccessoryBasedOnMoldes(this.modelList[0].data).subscribe(result3 => {\n          result3.forEach(data => {\n            console.log(result3.indexOf(data))\n            this.accList.push({\n              'Position': result3.indexOf(data) + 1,\n              'code': data.id.seriesCode + '~' + data.id.modelCode + '~' + data.id.accessoryCode,\n              'AccessoryName': data.accessoryName,\n              'Price': data.price,\n              'data': data\n            });\n          });\n        });\n        this.orderCreateService.getAccessoryBasedOnMoldes(this.modelList[0].data).subscribe(result3 => {\n          const arr = [];\n          result3.forEach(data => {\n            console.log(result3.indexOf(data))\n            const header = {\n              'Position': result3.indexOf(data) + 1,\n              'AccessoryName': data.accessoryName,\n              'Price': data.price\n            };\n            arr.push(header);\n          });\n          console.log(arr);\n          this.dataSourceForAccessory = new MatTableDataSource(arr);\n          this.dataSourceForAccessory.paginator = this.paginator;\n\n        });\n        this.orderCreateService.getColorsBasedOnModels(this.modelList[0].data).subscribe(result4 => {\n          result4.forEach(data => {\n            console.log(result4.indexOf(data))\n            this.colorsList.push({\n              'Position': result4.indexOf(data) + 1,\n              'code': data.id.seriesCode + '~' + data.id.modelCode + '~' + data.id.colorCode,\n              'ColorsName': data.colorName,\n              'ColorPrice': data.price,\n              'Qty': 1,\n              'data': data\n            });\n          });\n        });\n        this.orderCreateService.getColorsBasedOnModels(this.modelList[0].data).subscribe(result4 => {\n          const arr = [];\n          result4.forEach(data => {\n            const header = {\n              'Position': result4.indexOf(data) + 1,\n              'ColorsName': data.colorName,\n              'ColorPrice': data.price,\n              'Qty': data.qty\n            };\n            arr.push(header);\n          });\n          console.log(arr);\n          this.dataSourceForColor = new MatTableDataSource(arr);\n          this.dataSourceForColor.paginator = this.paginator;\n        });\n      });\n    });\n  }\n\n  seriesChange(event: any) {\n    this.modelList = [];\n    this.accList = [];\n    this.colorsList = [];\n    this.selectedAccessories = [];\n    this.selectedColors = [];\n    const series = new Series();\n    const id = new SeriesId();\n    id.cmpCode = '5000';\n    id.seriesCode = event;\n    series.id = id;\n    this.orderCreateService.getModelBasedOnSeries(series).subscribe(result2 => {\n      result2.forEach(data => {\n        this.modelList.push({\n          'code': data.id.seriesCode + '~' + data.id.modelCode,\n          'modelName': data.modelName,\n          'data': data\n        })\n      });\n      this.orderCreateService.getAccessoryBasedOnMoldes(this.modelList[0].data).subscribe(result3 => {\n        result3.forEach(data => {\n          console.log(result3.indexOf(data))\n          this.accList.push({\n            'Position': result3.indexOf(data) + 1,\n            'code': data.id.seriesCode + '~' + data.id.modelCode + '~' + data.id.accessoryCode,\n            'AccessoryName': data.accessoryName,\n            'Price': data.price,\n            'data': data\n          });\n        });\n      });\n\n      this.orderCreateService.getAccessoryBasedOnMoldes(this.modelList[0].data).subscribe(result3 => {\n        const arr = [];\n        result3.forEach(data => {\n          const header = {\n            'Position': result3.indexOf(data) + 1,\n            'AccessoryName': data.accessoryName,\n            'Price': data.price\n          };\n          arr.push(header);\n        });\n        console.log(arr);\n        this.dataSourceForAccessory = new MatTableDataSource(arr);\n        this.dataSourceForAccessory.paginator = this.paginator;\n\n      });\n      this.orderCreateService.getColorsBasedOnModels(this.modelList[0].data).subscribe(result4 => {\n        result4.forEach(data => {\n          console.log(result4.indexOf(data))\n          this.colorsList.push({\n            'Position': result4.indexOf(data) + 1,\n            'code': data.id.seriesCode + '~' + data.id.modelCode + '~' + data.id.colorCode,\n            'ColorsName': data.colorName,\n            'ColorPrice': data.price,\n            'Qty': 1,\n            'data': data\n          });\n        });\n      });\n      this.orderCreateService.getColorsBasedOnModels(this.modelList[0].data).subscribe(result4 => {\n        const arr = [];\n        result4.forEach(data => {\n          const header = {\n            'Position': result4.indexOf(data) + 1,\n            'ColorsName': data.colorName,\n            'ColorPrice': data.price,\n            'Qty': data.qty\n          };\n          arr.push(header);\n        });\n        console.log(arr);\n        this.dataSourceForColor = new MatTableDataSource(arr);\n        this.dataSourceForColor.paginator = this.paginator;\n      });\n    });\n  }\n\n  modelChange(event: any) {\n    this.accList = [];\n    this.colorsList = [];\n    this.selectedAccessories = [];\n    this.selectedColors = [];\n    console.log(this.accList);\n    console.log(event);\n    let x = event.split(\"~\");\n    const model = new Models();\n    const id = new ModelsId();\n    id.cmpCode = '5000';\n    id.seriesCode = x[0];\n    id.modelCode = x[1];\n    model.id = id;\n    this.orderCreateService.getAccessoryBasedOnMoldes(model).subscribe(result3 => {\n      result3.forEach(data => {\n        console.log(result3.indexOf(data))\n        this.accList.push({\n          'Position': result3.indexOf(data) + 1,\n          'code': data.id.seriesCode + '~' + data.id.modelCode + '~' + data.id.accessoryCode,\n          'AccessoryName': data.accessoryName,\n          'Price': data.price,\n          'data': data\n        });\n      });\n    });\n    this.orderCreateService.getAccessoryBasedOnMoldes(model).subscribe(result3 => {\n      const arr = [];\n      result3.forEach(data => {\n        const header = {\n          'Position': result3.indexOf(data) + 1,\n          'AccessoryName': data.accessoryName,\n          'Price': data.price\n        };\n        arr.push(header);\n      });\n      console.log(arr);\n      this.dataSourceForAccessory = new MatTableDataSource(arr);\n      this.dataSourceForAccessory.paginator = this.paginator;\n\n    });\n    this.orderCreateService.getColorsBasedOnModels(model).subscribe(result4 => {\n      result4.forEach(data => {\n        console.log(result4.indexOf(data))\n        this.colorsList.push({\n          'Position': result4.indexOf(data) + 1,\n          'code': data.id.seriesCode + '~' + data.id.modelCode + '~' + data.id.colorCode,\n          'ColorsName': data.colorName,\n          'ColorPrice': data.price,\n          'Qty': 1,\n          'data': data\n        });\n      });\n    });\n    this.orderCreateService.getColorsBasedOnModels(model).subscribe(result4 => {\n      const arr = [];\n      result4.forEach(data => {\n        const header = {\n          'Position': result4.indexOf(data) + 1,\n          'ColorsName': data.colorName,\n          'ColorPrice': data.price,\n          'Qty': 1\n        };\n        arr.push(header);\n      });\n      console.log(arr);\n      this.dataSourceForColor = new MatTableDataSource(arr);\n      this.dataSourceForColor.paginator = this.paginator;\n    });\n\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.accselection.selected.length;\n    const numRows = this.dataSourceForAccessory.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.accselection.clear() :\n      this.dataSourceForAccessory.data.forEach(row => this.accselection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.accselection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n  getAccValues() {\n    console.log(this.selectedAccessories);\n  }\n  getColorValues() {\n    console.log(this.selectedColors);\n  }\n  clear() {\n    this.TotalPrice = '';\n    this.seriesList = [];\n    this.modelList = [];\n    this.accList = [];\n    this.colorsList = [];\n    this.selectedAccessories = [];\n    this.selectedColors = [];\n    this.ngOnInit();\n  }\n  calculateTotalPrice() {\n    this.TotalPrice = 0;\n    const foundModel = this.modelList.find(element => element.code == this.selectedModel);\n    let accprice = 0;\n    this.selectedAccessories.forEach(data => {\n      const foundAcc = this.accList.find(element => element.code == data);\n      accprice = accprice + foundAcc.Price;\n    })\n    let colorsPrice = 0;\n    this.selectedColors.forEach(data => {\n      const foundColor = this.colorsList.find(element => element.code == data)\n      colorsPrice = colorsPrice + (foundColor.Qty * foundColor.ColorPrice);\n    })\n    this.TotalPrice = foundModel.data.modelPrice + accprice + colorsPrice;\n  }\n  saveOrder() {\n    let orderHeader = new OrderHeader();\n    let orderHeaderId = new OrderHeaderId();\n    let orderDetails= [];\n    let ordAccDetails=[];\n\n    orderHeaderId.cmpCode = '5000';\n    let x = this.selectedModel.split('~');\n    orderHeaderId.dealerCode = '5000D01';\n    orderHeaderId.seriesCode = x[0];\n    orderHeaderId.modelCode = x[1];\n    console.log(new Date());\n    orderHeader.id = orderHeaderId;\n    orderHeader.orderDt = new Date();\n    this.calculateTotalPrice()\n    orderHeader.orderValue = this.TotalPrice;\n\n    this.selectedAccessories.forEach(data => {\n      let orderAccDetail = new Orderaccessorydetail();\n      let orderAccDetailId = new OrderaccessorydetailId();\n      orderAccDetailId.cmpCode = '5000';\n      orderAccDetailId.dealerCode = '5000D01';\n      let x = data.split('~');\n      orderAccDetailId.accessoryCode = x[2];\n      orderAccDetail.id = orderAccDetailId;\n      ordAccDetails.push(orderAccDetail);\n    })\n    orderHeader.accDetails = ordAccDetails;\n\n    this.selectedColors.forEach(data => {\n      let orderDetail = new Orderdetail();\n      let orderDetailId = new OrderdetailId();\n      orderDetailId.cmpCode = '5000';\n      orderDetailId.dealerCode = '5000D01';\n      let x = data.split('~');\n      orderDetailId.colorCode = x[2];\n      orderDetail.id = orderDetailId;\n      const foundColor = this.colorsList.find(element => element.code == data)\n      orderDetail.totalOrdQty = foundColor.Qty;\n      orderDetail.totalAccQty = this.selectedAccessories.length * foundColor.Qty;\n      orderDetail.orderBaseAmount = (this.modelList.find(element => element.code == this.selectedModel).data.modelPrice * foundColor.Qty) + foundColor.ColorPrice;\n      let accprice = 0;\n      this.selectedAccessories.forEach(data => {\n        const foundAcc = this.accList.find(element => element.code == data);\n        accprice = accprice + foundAcc.Price;\n      })\n      orderDetail.orderAccesoryAmount = accprice * orderDetail.totalOrdQty;\n      orderDetail.orderTotalAmount = orderDetail.orderBaseAmount + orderDetail.orderAccesoryAmount;\n      orderDetails.push(orderDetail);\n    })\n\n    orderHeader.ordDetails = orderDetails;\n\n    console.log(orderHeader);\n    this.orderCreateService.saveOrders(orderHeader);\n  }\n}\n","<div class=\"form-group\">\n    <h4>Series</h4>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Select Series</mat-label>\n        <mat-select [(value)]=\"selectedSeries\" (selectionChange)=seriesChange($event.value)>\n            <mat-option *ngFor=\"let series of seriesList\" value={{series.code}}>\n                {{series.name}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n<div class=\"form-group\">\n    <h4>Models</h4>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Select Model</mat-label>\n        <mat-select [(value)]=\"selectedModel\" (selectionChange)=modelChange($event.value)>\n            <mat-option *ngFor=\"let model of modelList\" value={{model.code}}>\n                {{model.modelName}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n<div class=\"form-group\">\n    <h4>Accessoriess</h4>\n    <!-- <table mat-table [dataSource]=\"dataSourceForAccessory\" class=\"mat-elevation-z8\">\n        <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of columnsToDisplayForAccessory\">\n            <th mat-header-cell *matHeaderCellDef> {{column}} </th>\n            <td mat-cell *matCellDef=\"let element\" style=\"cursor: pointer\"> {{element[column]}} </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"columnsToDisplayForAccessory; sticky: true\"></tr>\n        <tr mat-row *matRowDef=\"let element; columns: columnsToDisplayForAccessory;\"></tr>\n    </table> -->\n    <ng-select bindLabel=\"AccessoryName\" placeholder=\"Select Accessories\" appendTo=\"body\" multiple=\"true\" [(ngModel)]=\"selectedAccessories\" (change)=\"getAccValues()\">\n        <ng-option [value]=acc.code *ngFor=\"let acc of accList\">\n            {{acc.AccessoryName}}\n        </ng-option>\n    </ng-select>\n</div>\n<div class=\"form-group\">\n    <h4>Select Colors</h4>\n\n    <!-- <table mat-table [dataSource]=\"dataSourceForColor\" class=\"mat-elevation-z8\">\n        <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of columnsToDisplayForColor\">\n            <th mat-header-cell *matHeaderCellDef> {{column}} </th>\n            <td mat-cell *matCellDef=\"let element\" style=\"cursor: pointer\"> {{element[column]}} </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"columnsToDisplayForColor; sticky: true\"></tr>\n        <tr mat-row *matRowDef=\"let element; columns: columnsToDisplayForColor;\">\n        </tr>\n    </table> -->\n\n    <ng-select bindLabel=\"ColorsName\" placeholder=\"Select Colors\" appendTo=\"body\" multiple=\"true\" [(ngModel)]=\"selectedColors\" (change)=\"getColorValues()\">\n        <ng-option [value]=color.code *ngFor=\"let color of colorsList\">\n            {{color.ColorsName}}\n        </ng-option>\n    </ng-select>\n</div>\n<div class=\"form-group\">\n    <span>\n        <button mat-flat-button color=\"primary\" type=\"submit\" label=\"calculateprice\" (click)=calculateTotalPrice()>CalculatePrice</button>\n    </span>\n    <mat-form-field class=\"example-full-width\">\n        <mat-label>$</mat-label>\n        <input matInput disabled value={{TotalPrice}}>\n    </mat-form-field>\n</div>\n<div class=\"form-group\">\n    <button mat-flat-button color=\"primary\" type=\"submit\" label=\"Create\" (click)=saveOrder()>Create</button>\n    <button mat-flat-button color=\"primary\" type=\"submit\" label=\"Reset\" (click)=clear()>Reset</button>\n</div>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs'\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Models } from '../models/models-model';\nimport { Series } from '../models/series-model';\nimport { Accessory } from '../models/accessory-model';\nimport { Colors } from '../models/colors-model';\nimport { OrderHeader } from '../models/orderheader-model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderCreateService {\n  private seriesModelurl = \"http://localhost:8083/series&model\";\n  private accessoryUrl = \"http://localhost:8080/accessory/getAccessories\";\n  private colorsUrl = \"http://localhost:8081/colors/getColors\";\n  private orderMgmtUrl=\"http://localhost:8082/order/saveOrder\";\n\n\n  constructor(private http: HttpClient) {\n\n  }\n  getSeries(): Observable<Series[]> {\n    return this.http.get<Series[]>(this.seriesModelurl + \"/getSeries\");\n  }\n\n  getModelBasedOnSeries(series: Series): Observable<Models[]> {\n    return this.http.post<Models[]>(this.seriesModelurl + \"/getModel\", series);\n\n  }\n  getAccessoryBasedOnMoldes(model: Models): Observable<Accessory[]> {\n    console.log(model);\n    return this.http.post<Accessory[]>(this.accessoryUrl, model);\n  }\n\n  getColorsBasedOnModels(model: Models): Observable<Colors[]> {\n    return this.http.post<Colors[]>(this.colorsUrl, model);\n  }\n\n  saveOrders(order:OrderHeader){\n    console.log(\"calling saveOrder\"+this.orderMgmtUrl);\n    this.http.post<OrderHeader>(this.orderMgmtUrl, order);\n  }\n}\n","\nimport { Component,OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n  \n})\nexport class TestComponent implements OnInit {\n \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  items = [\n    {id: 1, name: 'Python'},\n    {id: 2, name: 'Node Js'},\n    {id: 3, name: 'Java'},\n    {id: 4, name: 'PHP', disabled: true},\n    {id: 5, name: 'Django'},\n    {id: 6, name: 'Angular'},\n    {id: 7, name: 'Vue'},\n    {id: 8, name: 'ReactJs'},\n  ];\n  selected = [\n    {id: 2, name: 'Node Js'},\n    {id: 8, name: 'ReactJs'}\n  ];\n}","<ng-select [items]=\"items\" bindLabel=\"name\" placeholder=\"Select item\" appendTo=\"body\" multiple=\"true\" [(ngModel)]=\"selected\">\n</ng-select>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}